version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings
    columns:

      - name: listing_id
        description: Primary Key for the listing
        tests:
          - unique
          - not_null

      - name: host_id
        description: The host's id. References the host table
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: id

      - name: room_type
        description: Type of the apartment room
        tests:
          - accepted_values:
              values: [ 'Entire home/apt',
                      'Private room',
                      'Shared room',
                      'Hotel room']

      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights")}}'
        tests:
          - positive_value

  - name: dim_hosts_cleansed
    description: Cleansed table for the Airbnb hosts
    columns:
      - name: id
        description: The id of the host. This is the Primary Key
        tests:
          - not_null
          - unique
      
      - name: host_name
        description: The name of the host
        tests:
          - not_null

      - name: is_superhost
        description: Defines whether the hosts is a superhost.
        tests:
          - accepted_values:
              values: ['t', 'f']

  - name: dim_listings_w_hosts
    # tests:
      # - dim_listings_w_hostspositive_row_count_to_equal_other_table_times
      # MElwin Note the Great Expectations is not working friendely for MYSQL only few are working
      # - dbt_expectations.expect_table_row_count_to_equal_other_table_times_factor:
      #     compare_model: source('raw','listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 9000
              config:
                severity: warn
          # - dbt_expectations.expect_column_values_to_be_of_type:
          #     column_type: decimal(10,2)
    #       - dbt_expectations.expect_column_quantile_values_to_be_between:
    #           quantile: .99
    #           min_value: 50
    #           max_value: 500